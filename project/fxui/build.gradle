plugins {
	// java application with main method
	id 'application'
	// use javafx modules
    id 'org.openjfx.javafxplugin' version '0.0.8'
    
	// test coverage
    id 'jacoco'

	// code quality with SpotBugs
	id 'com.github.spotbugs' version '2.0.0'
	// code quality with checkstyle
	id 'checkstyle'
}

repositories {
    flatDir {
    	dirs 'libs'
    }
}

application {
	sourceCompatibility = JavaVersion.VERSION_1_10
	targetCompatibility = JavaVersion.VERSION_1_10
	mainClassName = 'todo.ui.FxApp' // application plugin
}

// javafx specific way of specifying dependencies
javafx {
	version = '11'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    // run with --debug-jvm flag and
    // launch debugger using Remote Java Application debug launch configuration
}

test {
	// don't run UI test on server (that cannot run javafx)
	if (project.hasProperty('ci') && "$ci" == 'gitlab') {
		exclude 'simpleex/ui/*'
	}
}

spotbugs {
	// see http://gradle.monochromeroad.com/docs/dsl/org.gradle.api.plugins.quality.FindBugsExtension.html
    ignoreFailures = true
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  	reports {
  		xml.enabled = false
  		html.enabled = true
  	}
}

checkstyle {
	configFile = project.file("../core/config/checkstyle/google_checks.xml")
}

dependencies {
	implementation project(':core')
    // brukergrensesnitt

    testImplementation 'junit:junit:4.12'

    // brukergrensesnitt
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit:4.0.16-alpha'
	testImplementation 'org.mockito:mockito-core:2.28.2'
}
